<template>
    <view @tap="onSearch">
        <van-search value="{{ value }}" placeholder="请输入搜索关键词" show-actionbind:search="onSearch" bind:cancel="onCancel"/>
    </view>

     <scroll-view scroll-y="true" style="width: {{windowWidth}}; height: {{windowHeight}}px" bindscrolltolower="getMoreData"
    lower-threshold="50" enable-back-to-top="true">
        <van-tabs active="{{ tab }}" >
            <van-tab title="正在旅行">
                <view class="content">
                    <view style='display: none'>
                        <image wx:for='{{dataList}}' wx:key='item' src='{{item.src}}' bindload='loadImage' data-index='{{index}}'/>
                    </view>
                    <scroll-view class='main' scroll-y='true' >
                        <view class='view_left'>
                            <block  wx:for='{{firstList}}' wx:key='index'>
                                <view @tap="viewTripDetail" style="height:{{item.height+20}}px;" data-infoid="{{item.id}}">
                                    <image src='{{item.src}}' class="previewImg" style='position:relative;margin-left: {{imgMargin}}rpx; width: {{imgWidth}}rpx; height:{{item.height}}px;'/>
                                    <view class="trip-item-title" style="width: {{imgWidth-10}}rpx;top:{{-60-item.height}}rpx">
                                        <text class="trip-title">{{item.title}}</text>
                                        <view class="author-info" @tap="viewUserInfo" data-userid="{{item.userid}}">
                                            <image class="author-img" src="{{item.authorImg}}" />
                                            <text class="author-name">{{item.authorName}}</text>
                                        </view>
                                    </view>
                                </view>
                            </block>
                        </view>

                        <view class='view_right'>
                            <block wx:for='{{secondList}}' wx:key="index">
                                <view @tap="viewTripDetail" style="height:{{item.height+20}}px;" data-infoid="{{item.id}}">
                                    <image class="previewImg" src='{{item.src}}' style='margin-left: {{imgMargin/2}}rpx; width: {{imgWidth}}rpx; height:{{item.height}}px;'/>
                                    <view class="trip-item-title trip-item-title_right" style="width: {{imgWidth-10}}rpx;top:{{-60-item.height}}rpx">
                                        <text>{{item.title}}</text>
                                        <view class="author-info"  @tap="viewUserInfo" data-userid="{{item.userid}}">
                                            <image class="author-img" src="{{item.authorImg}}" />
                                            <text class="author-name">{{item.authorName}}</text>
                                        </view>
                                    </view>
                                 </view>
                            </block>
                        </view>
                    </scroll-view>
                </view>
            </van-tab>
<!--           <van-tab title="推荐">
                   <view class="top">
                        <image class="user-photo" src="http://ae01.alicdn.com/kf/HTB1R5wbKNjaK1RjSZFAq6zdLFXaI.jpg"/>
                        <text class="user-name">外面有只羊</text>
                        <view class="notice">
                            <van-button round type="danger" size="mini" >+<i>关注</i></van-button>
                        </view>
                    </view>

                    <view class="middle">
                        <swiper indicator-dots="{{indicatorDots}}" interval="{{interval}}" duration="{{duration}}">
                            <swiper-item wx:for="{{imgUrls}}" wx:key="index">
                                <image src="{{item}}" class="slide-image"/>
                            </swiper-item>
                        </swiper>
                    </view>

                    <view class="footer">
                            <view class="location">
                                    <view>
                                        <van-icon name="location" />
                                    </view>
                            </view>
                    </view>
          </van-tab> -->
          <van-tab title="附近">内容 3</van-tab>
          <van-tab title="国内">内容 4</van-tab>
          <van-tab title="国外">内容 5</van-tab>
          <van-tab title="情侣出行">内容 6</van-tab>
        </van-tabs>
    </scroll-view>

    <view class="tabbar">
        <van-tabbar active="{{ active }}" active-color="#30C0AE" bind:change="onChange">
            <van-tabbar-item icon="home-o">主页</van-tabbar-item>
            <van-tabbar-item icon="fire-o">发布</van-tabbar-item>
            <van-tabbar-item icon="chat-o">消息</van-tabbar-item>
            <van-tabbar-item icon="friends-o">我的</van-tabbar-item>
        </van-tabbar>
    </view>
</template>
<script>
    import wepy from 'wepy'
    import { pullDownRefreshHide, pullDownRefreshShow } from '../util/cons.js'
    import { formatTime  } from '../util/util'

    import api from "../util/api.js"
    import util from "../util/util.js";
    import tip from '../util/tip.js'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '主页'
        }

        components = {
        }

        data = {
            userInfo:{},
            active: 0,
            tab:0,
            dataList: [], //数据源
            firstList: [], //第一列数组
            secondList: [], //第二列数组
            windowWidth: 0, //页面视图宽度
            windowHeight: 0, //视图高度
            imgMargin: 12, //图片边距: 单位rpx
            imgWidth: 324,  //图片宽度: 单位rpx
            topArr: [0, 0], //存储每列的累积top
            traveling:[],     //首页需要展示的信息
            trips: [],
            cycle: 1,

        }

        methods = {
            viewTripDetail(e) {
                let infoid = e.currentTarget.dataset.infoid
                wepy.navigateTo({
                    url: 'trip-detail?id='+infoid
                });
              },
            viewUserInfo(e) {
                let userid = e.currentTarget.dataset.userid
                wepy.navigateTo({
                    url: 'author-detail?id='+userid
                });
            },
            onChange(event) {
                let url = ['index','issue','message','user-center']
                wx.navigateTo({
                    url:url[event.detail]
                })
            },
            onSearch(event){
                console.log(this.data)
            }
        }

        async loadImage(e) {                                
            let index = e.currentTarget.dataset.index; //图片所在索引
            let imgW = e.detail.width, imgH = e.detail.height; //图片实际宽度和高度
            let imgWidth = this.data.imgWidth; //图片宽度

            let imgToll = parseInt(Math.random() * 100)/8;     //计算图片应该显示的高度
            let imgScaleH = (imgWidth / imgW * imgH) + imgToll; 

            let dataList = this.data.dataList;
            let margin = this.data.imgMargin;  //图片间距
            
            //第一列的累积top，和第二列的累积top
            let firtColH = this.data.topArr[0], secondColH = this.data.topArr[1];
            let firstList = this.data.firstList, secondList = this.data.secondList;
            let obj = dataList[index];
            obj.height = imgScaleH;

            if (firtColH <= secondColH) { //表示新图片应该放到第一列
              firtColH += margin + obj.height;
              obj.height = (obj.height)*1.2
              firstList.push(obj);
            }
            else { //放到第二列
              secondColH += margin + obj.height;
              secondList.push(obj);
            }

            this.dataList = dataList
            this.firstList = firstList
            this.secondList = secondList
            this.topArr =  [firtColH, secondColH]
            this.$apply()   //图片加载前的高度与宽度计算  
        }

        async getMoreData() {
            let cycle = this.data.cycle
            wx.showLoading({
                title: '加载中...',
            })
            this.$parent.db.collection('traveling').skip(20*cycle).limit(20).get().then(res => {    //分批依次加载数据库中的信息，每次20条
                this.setTravelData(res.data)
            })
            this.cycle += cycle         
            this.$apply()
        }

        async setTravelData (resData) {
            let that = this
            let len = resData.length
            let infos = []
            for(var i=0;i<len;i++){
                let ref = {}
                ref.imgs = resData[i].cover_image
                ref.title = resData[i].name
                ref.authorImg = resData[i].user.avatar_l
                ref.authorName = resData[i].user.name
                ref.id = resData[i].id
                ref.userid = resData[i].user.id
                infos.push(ref)
            }

            console.log(infos)
            let tmpArr = [];
            for (let i = 0; i < infos.length; i++) {
                let obj = {
                    src: infos[i].imgs,
                    height: 0,
                    title:infos[i].title,
                    authorImg:infos[i].authorImg,
                    authorName:infos[i].authorName,
                    id:infos[i].id,
                    userid:infos[i].userid
                }
              tmpArr.push(obj);
            }
            let dataList = that.data.dataList.concat(tmpArr)
            that.dataList = dataList
            wx.hideLoading()
            that.$apply()
        }

        async getData (){                               
            let that = this                      //获取traveling表中20条数据
            that.$parent.db.collection('traveling').get({
                  success(res) {
                    that.setTravelData(res.data)
                    console.log(that.data)
                }
            })
        }

        async getOpenid() {
            let that = this;
            wx.cloud.callFunction({
                name: 'getOpenid',
                complete: res => {
                    console.log('openid',res.result.openId)         
                    wx.setStorageSync('openId', res.result.openId)  //获取用户openid并存入缓存
                }
            })
        }

        async getUserinfo (){
            let _openid = wx.getStorageSync('openId')
            wx.cloud.callFunction({              
                name: 'getUserInfo',
                data:{
                    database:'userInfo',
                    userOpenId:_openid
                },  
                success: res => {
                    console.log(res.result.data[0])
                    wx.setStorageSync('userInfo', res.result.data[0])
                }
            }) 
        }

        async onLoad () {
            let that = this
            that.getOpenid()
            wx.showLoading({
                title: '加载中...',
            })
            //获取页面宽高度
            wx.getSystemInfo({
                success: function (res) {
                    console.log(res)
                    let windowWidth = res.windowWidth;
                    let imgMargin = that.data.imgMargin;
                    //两列，每列的图片宽度
                    let imgWidth = (windowWidth - imgMargin * 3) / 2;
                    that.windowWidth = windowWidth
                    that.windowHeight = res.windowHeight - 64
                    that.data.imgWidth = imgWidth
                    that.getData()  
                }
            })

            that.getUserinfo()   
            
        }

    }
</script>
<style>
.main{ 
    width: 100%; 
    height: 100%; 
    position: relative;  
}
.main .view_left,.view_right { 
    display: inline-block; 
    width: 50%; 
    vertical-align: top; 
}
.main image {
  box-shadow: 0 0 10rpx red;
   border-radius: 8rpx;
}
.content{
    width:700rpx;
    margin:0 auto;
}
.top{
    display: flex;
    flex-direction: row;
    padding:10rpx 10rpx;
}
.top .user-photo{
    width:50rpx;
    height: 50rpx;
}
.top .user-name{
    font-size:32rpx;
    margin-left: 10rpx;
}
.slide-image{
    width:400rpx;
    height: 200rpx;
}
.trip-item-title{
    position:relative;
    color:#fff;
    font-size: 28rpx;
    z-index: 9;
    border-radius: 0 0 5px 5px; 
    padding:0 20rpx;
}

.previewImg{
    margin-top: -180rpx;
}
.previewImg:first-child{
    margin-top:6px;
}
.author-info{
    height:40rpx;
    display: flex;
    flex-direction: row;
}
.author-img{
    width:30rpx;
    height:30rpx;
}
.author-name{
    font-size: 26rpx;
    margin-left: 10px;
}
.tabbar{
    position: fixed;
    bottom: 0;
    z-index: 999;
}
</style>
